// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package dao

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts
    (first_name, last_name, email, created_at, updated_at)
VALUES
    ($1, $2, $3, $4, $5)
RETURNING account_id
`

type CreateAccountParams struct {
	FirstName string
	LastName  string
	Email     string
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (int64, error) {
	row := q.db.QueryRow(ctx, createAccount,
		arg.FirstName,
		arg.LastName,
		arg.Email,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var account_id int64
	err := row.Scan(&account_id)
	return account_id, err
}

const getAccountByEmail = `-- name: GetAccountByEmail :one
SELECT account_id, first_name, last_name, email, created_at, updated_at FROM accounts WHERE email = $1 LIMIT 1
`

func (q *Queries) GetAccountByEmail(ctx context.Context, email string) (Account, error) {
	row := q.db.QueryRow(ctx, getAccountByEmail, email)
	var i Account
	err := row.Scan(
		&i.AccountID,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
