// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package dao

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type TxOperationType string

const (
	TxOperationTypeDebit  TxOperationType = "debit"
	TxOperationTypeCredit TxOperationType = "credit"
)

func (e *TxOperationType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TxOperationType(s)
	case string:
		*e = TxOperationType(s)
	default:
		return fmt.Errorf("unsupported scan type for TxOperationType: %T", src)
	}
	return nil
}

type NullTxOperationType struct {
	TxOperationType TxOperationType
	Valid           bool // Valid is true if TxOperationType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTxOperationType) Scan(value interface{}) error {
	if value == nil {
		ns.TxOperationType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TxOperationType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTxOperationType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TxOperationType), nil
}

type Account struct {
	AccountID int64
	FirstName string
	LastName  string
	Email     string
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
}

type Transaction struct {
	TransactionID int64
	AccountID     int32
	Operation     TxOperationType
	Amount        pgtype.Numeric
	Currency      string
	CreatedAt     pgtype.Timestamptz
	UpdatedAt     pgtype.Timestamptz
}
